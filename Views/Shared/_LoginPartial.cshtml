@using Microsoft.AspNetCore.Identity
@using web_voyager.Areas.TravelServices.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        if (user?.ProfilePicture != null)
        {
            <img style="width: 40px; height:40px; object-fit:cover; border-radius:20px; margin-right: 2px;"
                src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))" />
        }
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index"
                title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn dark-button">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="btn dark-button mx-md-2 my-2 my-md-0" id="register" asp-area="Identity"
                asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="btn dark-button" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
