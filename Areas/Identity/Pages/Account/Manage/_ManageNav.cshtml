@using web_voyager.Areas.TravelServices.Models;
@inject SignInManager<ApplicationUser> SignInManager
@{
        var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
        <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile"
                        asp-page="./Index">Profile</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email"
                        asp-page="./Email">Email</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)"
                        id="change-password" asp-page="./ChangePassword">Password</a></li>
        @if (hasExternalLogins)
        {
                <li id="external-logins" class="nav-item"><a id="external-login"
                                class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
                                asp-page="./ExternalLogins">External
                                logins</a></li>
        }
        @if (User.IsInRole("Admin"))
        {
                <li class="nav-item"><a class="nav-link" id="admin-bookings" asp-page="./MyBookings">Admin Bookings</a></li>
        }
        else
        {
                <li class="nav-item"><a class="nav-link" id="my-bookings" asp-page="./MyBookings">My Bookings</a></li>
        }

</ul>
